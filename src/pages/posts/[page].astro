---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

import type { GetStaticPaths } from 'astro';

interface Post {
  data: {
    title: string;
    pubDate: string;
    tags: string[];
  };
  slug: string;
}
interface Pagination {
  currentPage: number;
  lastPage: number;
  data: Post[];
}

interface Props {
  page: Pagination;
}

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allPosts = await getCollection('posts');
  const orderedPosts = allPosts.sort(
    (a, b) =>
      Date.parse(String(b.data.pubDate)) - Date.parse(String(a.data.pubDate)),
  );

  return paginate(orderedPosts, { pageSize: 10 });
};

// const { page }: { page: Pagination } = Astro.props;
const { page } = Astro.props as Props;

const pageTitle = `Blog - Page ${page.currentPage}`;
---

<style>
  #recent-posts-title {
    border-bottom: 1px solid var(--dark-bg);
    margin-bottom: 2rem;
  }
  ul {
    margin-bottom: 4rem;
  }
  .navigation-button {
    width: 10rem;
    padding: 1rem 1.5rem;
    text-transform: uppercase;
    font-weight: bold;
    font-size: 1rem;
    background-color: var(--color-background-secondary);
    color: #efe8e3;
    text-decoration: none;
    text-align: center;
    border-radius: 5px;
  }

  nav {
    display: flex;
    gap: 2rem;
  }
</style>

<BaseLayout pageTitle={pageTitle}>
  <h1 class="page-title">Blog</h1>
  <h2 id="recent-posts-title">Recent posts</h2>
  <ul>
    {
      page.data.map((post) => (
        <BlogPost
          url={`/posts/${post.slug}/`}
          title={post.data.title}
          pubDate={post.data.pubDate}
          tags={post.data.tags}
        />
      ))
    }
  </ul>
  <nav>
    {
      page.currentPage > 1 && (
        <a class="navigation-button" href={`/posts/${page.currentPage - 1}`}>
          Previous
        </a>
      )
    }
    {
      page.currentPage < page.lastPage && (
        <a class="navigation-button" href={`/posts/${page.currentPage + 1}`}>
          Next
        </a>
      )
    }
  </nav>
</BaseLayout>
